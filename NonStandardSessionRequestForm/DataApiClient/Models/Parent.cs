// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DataApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Parent
    {
        /// <summary>
        /// Initializes a new instance of the Parent class.
        /// </summary>
        public Parent() { }

        /// <summary>
        /// Initializes a new instance of the Parent class.
        /// </summary>
        public Parent(int? id = default(int?), string applicantUscId = default(string), string parentType = default(string), string salutation = default(string), string firstName = default(string), string lastName = default(string), string middleInitial = default(string), string suffix = default(string), bool? hasContactInformation = default(bool?), bool? isAlive = default(bool?), bool? hasSameHomeAddressAsApplicant = default(bool?), Address homeAddress = default(Address), Phone homePhone = default(Phone), string homeEmail = default(string), string companyName = default(string), string jobTitle = default(string), bool? isBusAddressAvailable = default(bool?), Address businessAddress = default(Address), Phone businessPhone = default(Phone), string businessEmail = default(string), bool? isUSCAlumnus = default(bool?), string graduateYear = default(string), string graduateMajor = default(string), string graduateFullName = default(string), string preferredAddress = default(string), IList<Degree> degrees = default(IList<Degree>))
        {
            Id = id;
            ApplicantUscId = applicantUscId;
            ParentType = parentType;
            Salutation = salutation;
            FirstName = firstName;
            LastName = lastName;
            MiddleInitial = middleInitial;
            Suffix = suffix;
            HasContactInformation = hasContactInformation;
            IsAlive = isAlive;
            HasSameHomeAddressAsApplicant = hasSameHomeAddressAsApplicant;
            HomeAddress = homeAddress;
            HomePhone = homePhone;
            HomeEmail = homeEmail;
            CompanyName = companyName;
            JobTitle = jobTitle;
            IsBusAddressAvailable = isBusAddressAvailable;
            BusinessAddress = businessAddress;
            BusinessPhone = businessPhone;
            BusinessEmail = businessEmail;
            IsUSCAlumnus = isUSCAlumnus;
            GraduateYear = graduateYear;
            GraduateMajor = graduateMajor;
            GraduateFullName = graduateFullName;
            PreferredAddress = preferredAddress;
            Degrees = degrees;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicantUscId")]
        public string ApplicantUscId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentType")]
        public string ParentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salutation")]
        public string Salutation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "middleInitial")]
        public string MiddleInitial { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasContactInformation")]
        public bool? HasContactInformation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAlive")]
        public bool? IsAlive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasSameHomeAddressAsApplicant")]
        public bool? HasSameHomeAddressAsApplicant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "homeAddress")]
        public Address HomeAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "homePhone")]
        public Phone HomePhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "homeEmail")]
        public string HomeEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobTitle")]
        public string JobTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isBusAddressAvailable")]
        public bool? IsBusAddressAvailable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessAddress")]
        public Address BusinessAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessPhone")]
        public Phone BusinessPhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessEmail")]
        public string BusinessEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUSCAlumnus")]
        public bool? IsUSCAlumnus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "graduateYear")]
        public string GraduateYear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "graduateMajor")]
        public string GraduateMajor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "graduateFullName")]
        public string GraduateFullName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredAddress")]
        public string PreferredAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "degrees")]
        public IList<Degree> Degrees { get; set; }

    }
}
