// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SessionRequestApi.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using SessionRequestApi.Client;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Section
    {
        /// <summary>
        /// Initializes a new instance of the Section class.
        /// </summary>
        public Section()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Section class.
        /// </summary>
        public Section(string sectionNumber, int? sectionId = default(int?), System.DateTime? lastUpdateTimeStamp = default(System.DateTime?), int? requestId = default(int?), string prefix = default(string), string title = default(string), string courseNumber = default(string), double? unitValue = default(double?), string instructorName = default(string), int? estimatedEnrollment = default(int?), string comments = default(string), int? incomeAccountNumber = default(int?), IList<Schedule> schedules = default(IList<Schedule>), Session session = default(Session))
        {
            SectionId = sectionId;
            LastUpdateTimeStamp = lastUpdateTimeStamp;
            SectionNumber = sectionNumber;
            RequestId = requestId;
            Prefix = prefix;
            Title = title;
            CourseNumber = courseNumber;
            UnitValue = unitValue;
            InstructorName = instructorName;
            EstimatedEnrollment = estimatedEnrollment;
            Comments = comments;
            IncomeAccountNumber = incomeAccountNumber;
            Schedules = schedules;
            Session = session;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sectionId")]
        public int? SectionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdateTimeStamp")]
        public System.DateTime? LastUpdateTimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sectionNumber")]
        public string SectionNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestId")]
        public int? RequestId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "courseNumber")]
        public string CourseNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitValue")]
        public double? UnitValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instructorName")]
        public string InstructorName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "estimatedEnrollment")]
        public int? EstimatedEnrollment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comments")]
        public string Comments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incomeAccountNumber")]
        public int? IncomeAccountNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedules")]
        public IList<Schedule> Schedules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "session")]
        public Session Session { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SectionNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SectionNumber");
            }
            if (SectionNumber != null)
            {
                if (SectionNumber.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "SectionNumber", 50);
                }
                if (SectionNumber.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "SectionNumber", 0);
                }
            }
            if (Prefix != null)
            {
                if (Prefix.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Prefix", 50);
                }
                if (Prefix.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Prefix", 0);
                }
            }
            if (Schedules != null)
            {
                foreach (var element in Schedules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Session != null)
            {
                Session.Validate();
            }
        }
    }
}
