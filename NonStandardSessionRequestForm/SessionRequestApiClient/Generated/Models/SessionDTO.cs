// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SessionRequestApi.Client.Models
{
    using Newtonsoft.Json;
    using SessionRequestApi.Client;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SessionDTO
    {
        /// <summary>
        /// Initializes a new instance of the SessionDTO class.
        /// </summary>
        public SessionDTO()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SessionDTO class.
        /// </summary>
        public SessionDTO(int? requestId = default(int?), string academicTerm = default(string), string owningSchool = default(string), string owningDepartment = default(string), string userContact = default(string), string userEmail = default(string), string userPhone = default(string), System.DateTime? firstDayOfClass = default(System.DateTime?), System.DateTime? lastDayOfClass = default(System.DateTime?), System.DateTime? lastDayForAddDrop = default(System.DateTime?), System.DateTime? lastDayForWithdrawal = default(System.DateTime?), System.DateTime? firstDayOfFinals = default(System.DateTime?), System.DateTime? lastDayOfFinals = default(System.DateTime?), System.DateTime? firstDayForFinalGrading = default(System.DateTime?), System.DateTime? lastDayForFinalGrading = default(System.DateTime?), System.DateTime? lastDayForEnrollmentOptionChange = default(System.DateTime?), bool? isClassHeldAtUpc = default(bool?), string uscCampusLocation = default(string), string otherCampusLocation = default(string), string sessionCode = default(string), string rateType = default(string), double? ratePerUnitAmount = default(double?), double? flatRateAmount = default(double?), int? flatRateUnitsMin = default(int?), int? flatRateUnitsMax = default(int?), System.DateTime? submitDate = default(System.DateTime?), string comments = default(string), IList<SessionBreakDTO> sessionBreaks = default(IList<SessionBreakDTO>), IList<SectionDTO> sections = default(IList<SectionDTO>))
        {
            RequestId = requestId;
            AcademicTerm = academicTerm;
            OwningSchool = owningSchool;
            OwningDepartment = owningDepartment;
            UserContact = userContact;
            UserEmail = userEmail;
            UserPhone = userPhone;
            FirstDayOfClass = firstDayOfClass;
            LastDayOfClass = lastDayOfClass;
            LastDayForAddDrop = lastDayForAddDrop;
            LastDayForWithdrawal = lastDayForWithdrawal;
            FirstDayOfFinals = firstDayOfFinals;
            LastDayOfFinals = lastDayOfFinals;
            FirstDayForFinalGrading = firstDayForFinalGrading;
            LastDayForFinalGrading = lastDayForFinalGrading;
            LastDayForEnrollmentOptionChange = lastDayForEnrollmentOptionChange;
            IsClassHeldAtUpc = isClassHeldAtUpc;
            UscCampusLocation = uscCampusLocation;
            OtherCampusLocation = otherCampusLocation;
            SessionCode = sessionCode;
            RateType = rateType;
            RatePerUnitAmount = ratePerUnitAmount;
            FlatRateAmount = flatRateAmount;
            FlatRateUnitsMin = flatRateUnitsMin;
            FlatRateUnitsMax = flatRateUnitsMax;
            SubmitDate = submitDate;
            Comments = comments;
            SessionBreaks = sessionBreaks;
            Sections = sections;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestId")]
        public int? RequestId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "academicTerm")]
        public string AcademicTerm { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningSchool")]
        public string OwningSchool { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningDepartment")]
        public string OwningDepartment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userContact")]
        public string UserContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userEmail")]
        public string UserEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userPhone")]
        public string UserPhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstDayOfClass")]
        public System.DateTime? FirstDayOfClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayOfClass")]
        public System.DateTime? LastDayOfClass { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayForAddDrop")]
        public System.DateTime? LastDayForAddDrop { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayForWithdrawal")]
        public System.DateTime? LastDayForWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstDayOfFinals")]
        public System.DateTime? FirstDayOfFinals { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayOfFinals")]
        public System.DateTime? LastDayOfFinals { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstDayForFinalGrading")]
        public System.DateTime? FirstDayForFinalGrading { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayForFinalGrading")]
        public System.DateTime? LastDayForFinalGrading { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDayForEnrollmentOptionChange")]
        public System.DateTime? LastDayForEnrollmentOptionChange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isClassHeldAtUpc")]
        public bool? IsClassHeldAtUpc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uscCampusLocation")]
        public string UscCampusLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherCampusLocation")]
        public string OtherCampusLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionCode")]
        public string SessionCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rateType")]
        public string RateType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ratePerUnitAmount")]
        public double? RatePerUnitAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flatRateAmount")]
        public double? FlatRateAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flatRateUnitsMin")]
        public int? FlatRateUnitsMin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flatRateUnitsMax")]
        public int? FlatRateUnitsMax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submitDate")]
        public System.DateTime? SubmitDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comments")]
        public string Comments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionBreaks")]
        public IList<SessionBreakDTO> SessionBreaks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sections")]
        public IList<SectionDTO> Sections { get; set; }

    }
}
