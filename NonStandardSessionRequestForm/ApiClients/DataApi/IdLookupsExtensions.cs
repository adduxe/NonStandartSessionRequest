// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for IdLookups.
    /// </summary>
    public static partial class IdLookupsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Get(this IIdLookups operations)
            {
                return operations.GetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetAsync(this IIdLookups operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='idLookup'>
            /// </param>
            public static object PostByIdLookup(this IIdLookups operations, IdLookup idLookup)
            {
                return operations.PostByIdLookupAsync(idLookup).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='idLookup'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PostByIdLookupAsync(this IIdLookups operations, IdLookup idLookup, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostByIdLookupWithHttpMessagesAsync(idLookup, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='casID'>
            /// </param>
            public static object GetByCasID(this IIdLookups operations, string casID)
            {
                return operations.GetByCasIDAsync(casID).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='casID'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetByCasIDAsync(this IIdLookups operations, string casID, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByCasIDWithHttpMessagesAsync(casID, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='casID'>
            /// </param>
            /// <param name='idLookup'>
            /// </param>
            public static object PutByCasIDIdLookup(this IIdLookups operations, string casID, IdLookup idLookup)
            {
                return operations.PutByCasIDIdLookupAsync(casID, idLookup).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='casID'>
            /// </param>
            /// <param name='idLookup'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PutByCasIDIdLookupAsync(this IIdLookups operations, string casID, IdLookup idLookup, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutByCasIDIdLookupWithHttpMessagesAsync(casID, idLookup, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
