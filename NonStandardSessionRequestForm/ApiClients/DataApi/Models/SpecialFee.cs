// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SpecialFee
    {
        /// <summary>
        /// Initializes a new instance of the SpecialFee class.
        /// </summary>
        public SpecialFee()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SpecialFee class.
        /// </summary>
        public SpecialFee(int requestId, string feeCode, string assessedTo, int amount, int? feeId = default(int?))
        {
            FeeId = feeId;
            RequestId = requestId;
            FeeCode = feeCode;
            AssessedTo = assessedTo;
            Amount = amount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "feeId")]
        public int? FeeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestId")]
        public int RequestId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "feeCode")]
        public string FeeCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assessedTo")]
        public string AssessedTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public int Amount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeeCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeeCode");
            }
            if (AssessedTo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssessedTo");
            }
        }
    }
}
