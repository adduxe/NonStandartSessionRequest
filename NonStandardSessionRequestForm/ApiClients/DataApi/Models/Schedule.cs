// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Schedule
    {
        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        public Schedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        public Schedule(int? scheduleId = default(int?), System.DateTime? lastUpdateTimeStamp = default(System.DateTime?), int? sectionId = default(int?), string classDayOfWeek = default(string), string classStartTime = default(string), string classEndTime = default(string), Section section = default(Section))
        {
            ScheduleId = scheduleId;
            LastUpdateTimeStamp = lastUpdateTimeStamp;
            SectionId = sectionId;
            ClassDayOfWeek = classDayOfWeek;
            ClassStartTime = classStartTime;
            ClassEndTime = classEndTime;
            Section = section;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scheduleId")]
        public int? ScheduleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdateTimeStamp")]
        public System.DateTime? LastUpdateTimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sectionId")]
        public int? SectionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classDayOfWeek")]
        public string ClassDayOfWeek { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classStartTime")]
        public string ClassStartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classEndTime")]
        public string ClassEndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "section")]
        public Section Section { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ClassDayOfWeek != null)
            {
                if (ClassDayOfWeek.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ClassDayOfWeek", 50);
                }
                if (ClassDayOfWeek.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ClassDayOfWeek", 0);
                }
            }
            if (ClassStartTime != null)
            {
                if (ClassStartTime.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ClassStartTime", 50);
                }
                if (ClassStartTime.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ClassStartTime", 0);
                }
            }
            if (ClassEndTime != null)
            {
                if (ClassEndTime.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ClassEndTime", 50);
                }
                if (ClassEndTime.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ClassEndTime", 0);
                }
            }
            if (Section != null)
            {
                Section.Validate();
            }
        }
    }
}
