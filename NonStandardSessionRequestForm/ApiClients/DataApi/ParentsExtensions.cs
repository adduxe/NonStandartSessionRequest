// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Parents.
    /// </summary>
    public static partial class ParentsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            public static object GetByApplicantUscId(this IParents operations, string applicantUscId)
            {
                return operations.GetByApplicantUscIdAsync(applicantUscId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetByApplicantUscIdAsync(this IParents operations, string applicantUscId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByApplicantUscIdWithHttpMessagesAsync(applicantUscId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parent'>
            /// </param>
            public static object PostByApplicantUscIdParent(this IParents operations, string applicantUscId, Parent parent)
            {
                return operations.PostByApplicantUscIdParentAsync(applicantUscId, parent).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parent'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PostByApplicantUscIdParentAsync(this IParents operations, string applicantUscId, Parent parent, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostByApplicantUscIdParentWithHttpMessagesAsync(applicantUscId, parent, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parentId'>
            /// </param>
            public static object GetByParentId(this IParents operations, int parentId)
            {
                return operations.GetByParentIdAsync(parentId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parentId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetByParentIdAsync(this IParents operations, int parentId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByParentIdWithHttpMessagesAsync(parentId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            public static object GetByApplicantUscIdParentId(this IParents operations, string applicantUscId, int parentId)
            {
                return operations.GetByApplicantUscIdParentIdAsync(applicantUscId, parentId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetByApplicantUscIdParentIdAsync(this IParents operations, string applicantUscId, int parentId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByApplicantUscIdParentIdWithHttpMessagesAsync(applicantUscId, parentId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            /// <param name='parent'>
            /// </param>
            public static object PutByApplicantUscIdParentIdParent(this IParents operations, string applicantUscId, int parentId, Parent parent)
            {
                return operations.PutByApplicantUscIdParentIdParentAsync(applicantUscId, parentId, parent).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            /// <param name='parent'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PutByApplicantUscIdParentIdParentAsync(this IParents operations, string applicantUscId, int parentId, Parent parent, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutByApplicantUscIdParentIdParentWithHttpMessagesAsync(applicantUscId, parentId, parent, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            public static object DeleteByApplicantUscIdParentId(this IParents operations, string applicantUscId, int parentId)
            {
                return operations.DeleteByApplicantUscIdParentIdAsync(applicantUscId, parentId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='applicantUscId'>
            /// </param>
            /// <param name='parentId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> DeleteByApplicantUscIdParentIdAsync(this IParents operations, string applicantUscId, int parentId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteByApplicantUscIdParentIdWithHttpMessagesAsync(applicantUscId, parentId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
