// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Applicants.
    /// </summary>
    public static partial class ApplicantsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='uscId'>
            /// </param>
            /// <param name='applicationStatus'>
            /// Possible values include: 'All', 'Certifiable', 'Certified', 'Withdrawable',
            /// 'Withdrawn'
            /// </param>
            public static object GetByUscIdApplicationStatus(this IApplicants operations, string uscId, string applicationStatus = default(string))
            {
                return operations.GetByUscIdApplicationStatusAsync(uscId, applicationStatus).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='uscId'>
            /// </param>
            /// <param name='applicationStatus'>
            /// Possible values include: 'All', 'Certifiable', 'Certified', 'Withdrawable',
            /// 'Withdrawn'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetByUscIdApplicationStatusAsync(this IApplicants operations, string uscId, string applicationStatus = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByUscIdApplicationStatusWithHttpMessagesAsync(uscId, applicationStatus, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='uscId'>
            /// </param>
            /// <param name='applicant'>
            /// </param>
            public static object PatchByUscIdApplicant(this IApplicants operations, string uscId, Applicant applicant)
            {
                return operations.PatchByUscIdApplicantAsync(uscId, applicant).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='uscId'>
            /// </param>
            /// <param name='applicant'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PatchByUscIdApplicantAsync(this IApplicants operations, string uscId, Applicant applicant, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PatchByUscIdApplicantWithHttpMessagesAsync(uscId, applicant, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
