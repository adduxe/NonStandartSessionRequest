// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PeApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class USCPEApiDTOCaoAppsCaoApplication
    {
        /// <summary>
        /// Initializes a new instance of the USCPEApiDTOCaoAppsCaoApplication
        /// class.
        /// </summary>
        public USCPEApiDTOCaoAppsCaoApplication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the USCPEApiDTOCaoAppsCaoApplication
        /// class.
        /// </summary>
        public USCPEApiDTOCaoAppsCaoApplication(USCPEApiDTOCaoAppsAddress permanentAddress = default(USCPEApiDTOCaoAppsAddress), USCPEApiDTOCaoAppsAddress currentAddress = default(USCPEApiDTOCaoAppsAddress), USCPEApiDTOCaoAppsSchoolContact schoolCounselor = default(USCPEApiDTOCaoAppsSchoolContact), USCPEApiDTOCaoAppsSchoolContact advisor = default(USCPEApiDTOCaoAppsSchoolContact), string commonAppId = default(string), string termCode = default(string), string uscId = default(string), string clientId = default(string), System.DateTime? createdDate = default(System.DateTime?), string slideroom = default(string), bool? isPreAppAllowed = default(bool?), string planToEnroll = default(string), System.DateTime? submittedDate = default(System.DateTime?), System.DateTime? printedDate = default(System.DateTime?), System.DateTime? appExportDate = default(System.DateTime?), string paymentStatus = default(string), System.DateTime? paymentTransDate = default(System.DateTime?), string paymentType = default(string), int? paymentFeeAmt = default(int?), string paymentTransNo = default(string), string paymentOrderId = default(string), string slideroomUrl = default(string), string studentType = default(string), string recommenderId = default(string), bool? isFirstGeneration = default(bool?), string firstName = default(string), string middleName = default(string), string lastName = default(string), string suffix = default(string), string formerLastName = default(string), string preferredName = default(string), string gender = default(string), string genderIdentity = default(string), System.DateTime? dateOfBirth = default(System.DateTime?), System.DateTime? currAddrFromDate = default(System.DateTime?), System.DateTime? currAddrToDate = default(System.DateTime?), string emailAddress = default(string), string preferredPhoneType = default(string), string preferredPhone = default(string), string alternatePhoneType = default(string), string alternatePhone = default(string), string religiousPreference = default(string), string religiousPreferenceOther = default(string), bool? isUsVeteran = default(bool?), string usVetStatus = default(string), string usVetBranch = default(string), System.DateTime? usServiceStartDate = default(System.DateTime?), System.DateTime? usServiceEndDate = default(System.DateTime?), string usVetDischarge = default(string), bool? isHispanic = default(bool?), string hispanicOptions = default(string), string hispanicOther = default(string), string ethnicMember = default(string), string nativeAmericanOptions = default(string), string nativeAmericanOther = default(string), string nativeAmericanEnrolled = default(string), string nativeAmericanEnrollNo = default(string), string asianOptions = default(string), string eastAsiaOther = default(string), string southAsianOther = default(string), string southeastAsiaOther = default(string), string blackOptions = default(string), string blackOther = default(string), string hawaiianOptions = default(string), string hawaiianOther = default(string), string whiteOptions = default(string), string whiteOther = default(string), string birthCountry = default(string), string birthCity = default(string), string birthState = default(string), int? yearsInCountry = default(int?), int? yearsLivedOutside = default(int?), string citizenshipStatus = default(string), string ssn = default(string), string allCitizenships = default(string), bool? isGreenCardUploaded = default(bool?), string alienRegNumber = default(string), System.DateTime? alienRegNumberDate = default(System.DateTime?), string visaType = default(string), string visaOther = default(string), string visaNumber = default(string), System.DateTime? dateVisaIssued = default(System.DateTime?), bool? isFeeWaiver = default(bool?), string parentsMaritalStatus = default(string), System.DateTime? parentsDivorcedDate = default(System.DateTime?), string parentPermanentHome = default(string), bool? hasAnyChild = default(bool?), int? howManyChildren = default(int?), bool? isLeavingExamination = default(bool?), System.DateTime? gedDate = default(System.DateTime?), int? numCommunityOrganizations = default(int?), string communityOrganization1 = default(string), string communityOrganization2 = default(string), string communityOrganization3 = default(string), string communityOrganizationOther = default(string), string classRankReporting = default(string), int? classRank = default(int?), string decileRank = default(string), string quintileRank = default(string), string quartileRank = default(string), bool? isClassRankWeighted = default(bool?), int? gradClassSize = default(int?), double? cumlativeGpa = default(double?), int? gpaScale = default(int?), bool? isGpaWeighted = default(bool?), string personalEssayType = default(string), string personalEssay = default(string), bool? hasDisciplinaryAction = default(bool?), bool? hasConvictedOfFelony = default(bool?), string addlInformation = default(string), string gapsExplanation = default(string), string institutionType = default(string), string currentlyEnrolled = default(string), string honorSociety = default(string), System.DateTime? hsGraduationDate = default(System.DateTime?), bool? isSecSchoolInterrupted = default(bool?), string gaps = default(string), string term = default(string), bool? needFinancialAid = default(bool?), string major1Code = default(string), string major2Code = default(string), string preProfEmph = default(string), bool? hasRelativeEmployedAtMember = default(bool?), string employeeReportedOnCa = default(string), string familyAttendUscOnCao = default(string), string careerInterest = default(string), string highestDegree = default(string), bool? isInternationalStudent = default(bool?), bool? isFerpaWaiver = default(bool?), string commonAppSubmissionSign = default(string), System.DateTime? commonAppSubmissionDate = default(System.DateTime?), bool? isSubmittedFirstGen = default(bool?), string militaryDischargeExplanation = default(string), string disciplinaryViolationExp = default(string), string criminalHistoryExplanation = default(string), string textConsent = default(string), string textPhone = default(string), string trackingReference = default(string), string otherNameUsage = default(string), bool? isMailingTemporary = default(bool?), string holdUsVisa = default(string), string scholarSnappOptIn = default(string), string communityOrganization2Other = default(string), string communityOrganization3Other = default(string), string accessToTranscripts = default(string), string transcriptsUseGradingScale = default(string), string highSchoolSchedule = default(string), string highSchoolDiploma = default(string), string cGradesAffirmation = default(string), string grade9CoursesAndGrades = default(string), string grade10CoursesAndGrades = default(string), string grade11CoursesAndGrades = default(string), string grade12CoursesToReport = default(string), string grade12CoursesAndGrades = default(string), string otherCoursesToReport = default(string), string otherCoursesAndGrades = default(string), string otherCareerInterest = default(string), IList<USCPEApiDTOCaoAppsActivity> activities = default(IList<USCPEApiDTOCaoAppsActivity>), IList<USCPEApiDTOCaoAppsTest> tests = default(IList<USCPEApiDTOCaoAppsTest>), IList<USCPEApiDTOCaoAppsSslExam> sslExams = default(IList<USCPEApiDTOCaoAppsSslExam>), IList<USCPEApiDTOCaoAppsCollegeCredit> collegeCredits = default(IList<USCPEApiDTOCaoAppsCollegeCredit>), IList<USCPEApiDTOCaoAppsSibling> siblings = default(IList<USCPEApiDTOCaoAppsSibling>), IList<USCPEApiDTOCaoAppsCourse> courses = default(IList<USCPEApiDTOCaoAppsCourse>), IList<USCPEApiDTOCaoAppsProficientLanguage> proficientLanguages = default(IList<USCPEApiDTOCaoAppsProficientLanguage>), IList<USCPEApiDTOCaoAppsSchool> schools = default(IList<USCPEApiDTOCaoAppsSchool>), IList<USCPEApiDTOCaoAppsEmployee> uscEmployees = default(IList<USCPEApiDTOCaoAppsEmployee>), IList<USCPEApiDTOCaoAppsParent> parents = default(IList<USCPEApiDTOCaoAppsParent>), IList<USCPEApiDTOCaoAppsHonor> honors = default(IList<USCPEApiDTOCaoAppsHonor>), IList<USCPEApiDTOCaoAppsFamilyAttend> familyAttends = default(IList<USCPEApiDTOCaoAppsFamilyAttend>))
        {
            PermanentAddress = permanentAddress;
            CurrentAddress = currentAddress;
            SchoolCounselor = schoolCounselor;
            Advisor = advisor;
            CommonAppId = commonAppId;
            TermCode = termCode;
            UscId = uscId;
            ClientId = clientId;
            CreatedDate = createdDate;
            Slideroom = slideroom;
            IsPreAppAllowed = isPreAppAllowed;
            PlanToEnroll = planToEnroll;
            SubmittedDate = submittedDate;
            PrintedDate = printedDate;
            AppExportDate = appExportDate;
            PaymentStatus = paymentStatus;
            PaymentTransDate = paymentTransDate;
            PaymentType = paymentType;
            PaymentFeeAmt = paymentFeeAmt;
            PaymentTransNo = paymentTransNo;
            PaymentOrderId = paymentOrderId;
            SlideroomUrl = slideroomUrl;
            StudentType = studentType;
            RecommenderId = recommenderId;
            IsFirstGeneration = isFirstGeneration;
            FirstName = firstName;
            MiddleName = middleName;
            LastName = lastName;
            Suffix = suffix;
            FormerLastName = formerLastName;
            PreferredName = preferredName;
            Gender = gender;
            GenderIdentity = genderIdentity;
            DateOfBirth = dateOfBirth;
            CurrAddrFromDate = currAddrFromDate;
            CurrAddrToDate = currAddrToDate;
            EmailAddress = emailAddress;
            PreferredPhoneType = preferredPhoneType;
            PreferredPhone = preferredPhone;
            AlternatePhoneType = alternatePhoneType;
            AlternatePhone = alternatePhone;
            ReligiousPreference = religiousPreference;
            ReligiousPreferenceOther = religiousPreferenceOther;
            IsUsVeteran = isUsVeteran;
            UsVetStatus = usVetStatus;
            UsVetBranch = usVetBranch;
            UsServiceStartDate = usServiceStartDate;
            UsServiceEndDate = usServiceEndDate;
            UsVetDischarge = usVetDischarge;
            IsHispanic = isHispanic;
            HispanicOptions = hispanicOptions;
            HispanicOther = hispanicOther;
            EthnicMember = ethnicMember;
            NativeAmericanOptions = nativeAmericanOptions;
            NativeAmericanOther = nativeAmericanOther;
            NativeAmericanEnrolled = nativeAmericanEnrolled;
            NativeAmericanEnrollNo = nativeAmericanEnrollNo;
            AsianOptions = asianOptions;
            EastAsiaOther = eastAsiaOther;
            SouthAsianOther = southAsianOther;
            SoutheastAsiaOther = southeastAsiaOther;
            BlackOptions = blackOptions;
            BlackOther = blackOther;
            HawaiianOptions = hawaiianOptions;
            HawaiianOther = hawaiianOther;
            WhiteOptions = whiteOptions;
            WhiteOther = whiteOther;
            BirthCountry = birthCountry;
            BirthCity = birthCity;
            BirthState = birthState;
            YearsInCountry = yearsInCountry;
            YearsLivedOutside = yearsLivedOutside;
            CitizenshipStatus = citizenshipStatus;
            Ssn = ssn;
            AllCitizenships = allCitizenships;
            IsGreenCardUploaded = isGreenCardUploaded;
            AlienRegNumber = alienRegNumber;
            AlienRegNumberDate = alienRegNumberDate;
            VisaType = visaType;
            VisaOther = visaOther;
            VisaNumber = visaNumber;
            DateVisaIssued = dateVisaIssued;
            IsFeeWaiver = isFeeWaiver;
            ParentsMaritalStatus = parentsMaritalStatus;
            ParentsDivorcedDate = parentsDivorcedDate;
            ParentPermanentHome = parentPermanentHome;
            HasAnyChild = hasAnyChild;
            HowManyChildren = howManyChildren;
            IsLeavingExamination = isLeavingExamination;
            GedDate = gedDate;
            NumCommunityOrganizations = numCommunityOrganizations;
            CommunityOrganization1 = communityOrganization1;
            CommunityOrganization2 = communityOrganization2;
            CommunityOrganization3 = communityOrganization3;
            CommunityOrganizationOther = communityOrganizationOther;
            ClassRankReporting = classRankReporting;
            ClassRank = classRank;
            DecileRank = decileRank;
            QuintileRank = quintileRank;
            QuartileRank = quartileRank;
            IsClassRankWeighted = isClassRankWeighted;
            GradClassSize = gradClassSize;
            CumlativeGpa = cumlativeGpa;
            GpaScale = gpaScale;
            IsGpaWeighted = isGpaWeighted;
            PersonalEssayType = personalEssayType;
            PersonalEssay = personalEssay;
            HasDisciplinaryAction = hasDisciplinaryAction;
            HasConvictedOfFelony = hasConvictedOfFelony;
            AddlInformation = addlInformation;
            GapsExplanation = gapsExplanation;
            InstitutionType = institutionType;
            CurrentlyEnrolled = currentlyEnrolled;
            HonorSociety = honorSociety;
            HsGraduationDate = hsGraduationDate;
            IsSecSchoolInterrupted = isSecSchoolInterrupted;
            Gaps = gaps;
            Term = term;
            NeedFinancialAid = needFinancialAid;
            Major1Code = major1Code;
            Major2Code = major2Code;
            PreProfEmph = preProfEmph;
            HasRelativeEmployedAtMember = hasRelativeEmployedAtMember;
            EmployeeReportedOnCa = employeeReportedOnCa;
            FamilyAttendUscOnCao = familyAttendUscOnCao;
            CareerInterest = careerInterest;
            HighestDegree = highestDegree;
            IsInternationalStudent = isInternationalStudent;
            IsFerpaWaiver = isFerpaWaiver;
            CommonAppSubmissionSign = commonAppSubmissionSign;
            CommonAppSubmissionDate = commonAppSubmissionDate;
            IsSubmittedFirstGen = isSubmittedFirstGen;
            MilitaryDischargeExplanation = militaryDischargeExplanation;
            DisciplinaryViolationExp = disciplinaryViolationExp;
            CriminalHistoryExplanation = criminalHistoryExplanation;
            TextConsent = textConsent;
            TextPhone = textPhone;
            TrackingReference = trackingReference;
            OtherNameUsage = otherNameUsage;
            IsMailingTemporary = isMailingTemporary;
            HoldUsVisa = holdUsVisa;
            ScholarSnappOptIn = scholarSnappOptIn;
            CommunityOrganization2Other = communityOrganization2Other;
            CommunityOrganization3Other = communityOrganization3Other;
            AccessToTranscripts = accessToTranscripts;
            TranscriptsUseGradingScale = transcriptsUseGradingScale;
            HighSchoolSchedule = highSchoolSchedule;
            HighSchoolDiploma = highSchoolDiploma;
            CGradesAffirmation = cGradesAffirmation;
            Grade9CoursesAndGrades = grade9CoursesAndGrades;
            Grade10CoursesAndGrades = grade10CoursesAndGrades;
            Grade11CoursesAndGrades = grade11CoursesAndGrades;
            Grade12CoursesToReport = grade12CoursesToReport;
            Grade12CoursesAndGrades = grade12CoursesAndGrades;
            OtherCoursesToReport = otherCoursesToReport;
            OtherCoursesAndGrades = otherCoursesAndGrades;
            OtherCareerInterest = otherCareerInterest;
            Activities = activities;
            Tests = tests;
            SslExams = sslExams;
            CollegeCredits = collegeCredits;
            Siblings = siblings;
            Courses = courses;
            ProficientLanguages = proficientLanguages;
            Schools = schools;
            UscEmployees = uscEmployees;
            Parents = parents;
            Honors = honors;
            FamilyAttends = familyAttends;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "permanentAddress")]
        public USCPEApiDTOCaoAppsAddress PermanentAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentAddress")]
        public USCPEApiDTOCaoAppsAddress CurrentAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schoolCounselor")]
        public USCPEApiDTOCaoAppsSchoolContact SchoolCounselor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "advisor")]
        public USCPEApiDTOCaoAppsSchoolContact Advisor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commonAppId")]
        public string CommonAppId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "termCode")]
        public string TermCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uscId")]
        public string UscId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slideroom")]
        public string Slideroom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPreAppAllowed")]
        public bool? IsPreAppAllowed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "planToEnroll")]
        public string PlanToEnroll { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submittedDate")]
        public System.DateTime? SubmittedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "printedDate")]
        public System.DateTime? PrintedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "appExportDate")]
        public System.DateTime? AppExportDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentStatus")]
        public string PaymentStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentTransDate")]
        public System.DateTime? PaymentTransDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentType")]
        public string PaymentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentFeeAmt")]
        public int? PaymentFeeAmt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentTransNo")]
        public string PaymentTransNo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentOrderId")]
        public string PaymentOrderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slideroomUrl")]
        public string SlideroomUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "studentType")]
        public string StudentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recommenderId")]
        public string RecommenderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFirstGeneration")]
        public bool? IsFirstGeneration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "middleName")]
        public string MiddleName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "formerLastName")]
        public string FormerLastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredName")]
        public string PreferredName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "genderIdentity")]
        public string GenderIdentity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currAddrFromDate")]
        public System.DateTime? CurrAddrFromDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currAddrToDate")]
        public System.DateTime? CurrAddrToDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredPhoneType")]
        public string PreferredPhoneType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredPhone")]
        public string PreferredPhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alternatePhoneType")]
        public string AlternatePhoneType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alternatePhone")]
        public string AlternatePhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "religiousPreference")]
        public string ReligiousPreference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "religiousPreferenceOther")]
        public string ReligiousPreferenceOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUsVeteran")]
        public bool? IsUsVeteran { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usVetStatus")]
        public string UsVetStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usVetBranch")]
        public string UsVetBranch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usServiceStartDate")]
        public System.DateTime? UsServiceStartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usServiceEndDate")]
        public System.DateTime? UsServiceEndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usVetDischarge")]
        public string UsVetDischarge { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isHispanic")]
        public bool? IsHispanic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hispanicOptions")]
        public string HispanicOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hispanicOther")]
        public string HispanicOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ethnicMember")]
        public string EthnicMember { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nativeAmericanOptions")]
        public string NativeAmericanOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nativeAmericanOther")]
        public string NativeAmericanOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nativeAmericanEnrolled")]
        public string NativeAmericanEnrolled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nativeAmericanEnrollNo")]
        public string NativeAmericanEnrollNo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "asianOptions")]
        public string AsianOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eastAsiaOther")]
        public string EastAsiaOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "southAsianOther")]
        public string SouthAsianOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "southeastAsiaOther")]
        public string SoutheastAsiaOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blackOptions")]
        public string BlackOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blackOther")]
        public string BlackOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hawaiianOptions")]
        public string HawaiianOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hawaiianOther")]
        public string HawaiianOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "whiteOptions")]
        public string WhiteOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "whiteOther")]
        public string WhiteOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "birthCountry")]
        public string BirthCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "birthCity")]
        public string BirthCity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "birthState")]
        public string BirthState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yearsInCountry")]
        public int? YearsInCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yearsLivedOutside")]
        public int? YearsLivedOutside { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "citizenshipStatus")]
        public string CitizenshipStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ssn")]
        public string Ssn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allCitizenships")]
        public string AllCitizenships { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isGreenCardUploaded")]
        public bool? IsGreenCardUploaded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alienRegNumber")]
        public string AlienRegNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alienRegNumberDate")]
        public System.DateTime? AlienRegNumberDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "visaType")]
        public string VisaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "visaOther")]
        public string VisaOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "visaNumber")]
        public string VisaNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateVisaIssued")]
        public System.DateTime? DateVisaIssued { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFeeWaiver")]
        public bool? IsFeeWaiver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentsMaritalStatus")]
        public string ParentsMaritalStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentsDivorcedDate")]
        public System.DateTime? ParentsDivorcedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentPermanentHome")]
        public string ParentPermanentHome { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasAnyChild")]
        public bool? HasAnyChild { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "howManyChildren")]
        public int? HowManyChildren { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLeavingExamination")]
        public bool? IsLeavingExamination { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gedDate")]
        public System.DateTime? GedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numCommunityOrganizations")]
        public int? NumCommunityOrganizations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganization1")]
        public string CommunityOrganization1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganization2")]
        public string CommunityOrganization2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganization3")]
        public string CommunityOrganization3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganizationOther")]
        public string CommunityOrganizationOther { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classRankReporting")]
        public string ClassRankReporting { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classRank")]
        public int? ClassRank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "decileRank")]
        public string DecileRank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quintileRank")]
        public string QuintileRank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quartileRank")]
        public string QuartileRank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isClassRankWeighted")]
        public bool? IsClassRankWeighted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gradClassSize")]
        public int? GradClassSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cumlativeGpa")]
        public double? CumlativeGpa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gpaScale")]
        public int? GpaScale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isGpaWeighted")]
        public bool? IsGpaWeighted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "personalEssayType")]
        public string PersonalEssayType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "personalEssay")]
        public string PersonalEssay { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasDisciplinaryAction")]
        public bool? HasDisciplinaryAction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasConvictedOfFelony")]
        public bool? HasConvictedOfFelony { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "addlInformation")]
        public string AddlInformation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gapsExplanation")]
        public string GapsExplanation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "institutionType")]
        public string InstitutionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentlyEnrolled")]
        public string CurrentlyEnrolled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "honorSociety")]
        public string HonorSociety { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hsGraduationDate")]
        public System.DateTime? HsGraduationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSecSchoolInterrupted")]
        public bool? IsSecSchoolInterrupted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gaps")]
        public string Gaps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "term")]
        public string Term { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "needFinancialAid")]
        public bool? NeedFinancialAid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "major1Code")]
        public string Major1Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "major2Code")]
        public string Major2Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preProfEmph")]
        public string PreProfEmph { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasRelativeEmployedAtMember")]
        public bool? HasRelativeEmployedAtMember { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "employeeReportedOnCa")]
        public string EmployeeReportedOnCa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "familyAttendUscOnCao")]
        public string FamilyAttendUscOnCao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "careerInterest")]
        public string CareerInterest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highestDegree")]
        public string HighestDegree { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isInternationalStudent")]
        public bool? IsInternationalStudent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFerpaWaiver")]
        public bool? IsFerpaWaiver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commonAppSubmissionSign")]
        public string CommonAppSubmissionSign { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commonAppSubmissionDate")]
        public System.DateTime? CommonAppSubmissionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSubmittedFirstGen")]
        public bool? IsSubmittedFirstGen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "militaryDischargeExplanation")]
        public string MilitaryDischargeExplanation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disciplinaryViolationExp")]
        public string DisciplinaryViolationExp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "criminalHistoryExplanation")]
        public string CriminalHistoryExplanation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "textConsent")]
        public string TextConsent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "textPhone")]
        public string TextPhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trackingReference")]
        public string TrackingReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherNameUsage")]
        public string OtherNameUsage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isMailingTemporary")]
        public bool? IsMailingTemporary { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "holdUsVisa")]
        public string HoldUsVisa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scholarSnappOptIn")]
        public string ScholarSnappOptIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganization2Other")]
        public string CommunityOrganization2Other { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "communityOrganization3Other")]
        public string CommunityOrganization3Other { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessToTranscripts")]
        public string AccessToTranscripts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transcriptsUseGradingScale")]
        public string TranscriptsUseGradingScale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highSchoolSchedule")]
        public string HighSchoolSchedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highSchoolDiploma")]
        public string HighSchoolDiploma { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cGradesAffirmation")]
        public string CGradesAffirmation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grade9CoursesAndGrades")]
        public string Grade9CoursesAndGrades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grade10CoursesAndGrades")]
        public string Grade10CoursesAndGrades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grade11CoursesAndGrades")]
        public string Grade11CoursesAndGrades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grade12CoursesToReport")]
        public string Grade12CoursesToReport { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grade12CoursesAndGrades")]
        public string Grade12CoursesAndGrades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherCoursesToReport")]
        public string OtherCoursesToReport { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherCoursesAndGrades")]
        public string OtherCoursesAndGrades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherCareerInterest")]
        public string OtherCareerInterest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activities")]
        public IList<USCPEApiDTOCaoAppsActivity> Activities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tests")]
        public IList<USCPEApiDTOCaoAppsTest> Tests { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sslExams")]
        public IList<USCPEApiDTOCaoAppsSslExam> SslExams { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "collegeCredits")]
        public IList<USCPEApiDTOCaoAppsCollegeCredit> CollegeCredits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "siblings")]
        public IList<USCPEApiDTOCaoAppsSibling> Siblings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "courses")]
        public IList<USCPEApiDTOCaoAppsCourse> Courses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "proficientLanguages")]
        public IList<USCPEApiDTOCaoAppsProficientLanguage> ProficientLanguages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schools")]
        public IList<USCPEApiDTOCaoAppsSchool> Schools { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uscEmployees")]
        public IList<USCPEApiDTOCaoAppsEmployee> UscEmployees { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parents")]
        public IList<USCPEApiDTOCaoAppsParent> Parents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "honors")]
        public IList<USCPEApiDTOCaoAppsHonor> Honors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "familyAttends")]
        public IList<USCPEApiDTOCaoAppsFamilyAttend> FamilyAttends { get; set; }

    }
}
