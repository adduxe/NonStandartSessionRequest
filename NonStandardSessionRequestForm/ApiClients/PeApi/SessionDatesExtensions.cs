// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PeApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SessionDates.
    /// </summary>
    public static partial class SessionDatesExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionId'>
            /// </param>
            public static USCPEApiDTORnrAppsSessionDate Get(this ISessionDates operations, string sessionId)
            {
                return operations.GetAsync(sessionId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<USCPEApiDTORnrAppsSessionDate> GetAsync(this ISessionDates operations, string sessionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(sessionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='term'>
            /// </param>
            /// <param name='sessionCode'>
            /// </param>
            public static USCPEApiDTORnrAppsSessionDate Get1(this ISessionDates operations, string term, string sessionCode)
            {
                return operations.Get1Async(term, sessionCode).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='term'>
            /// </param>
            /// <param name='sessionCode'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<USCPEApiDTORnrAppsSessionDate> Get1Async(this ISessionDates operations, string term, string sessionCode, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Get1WithHttpMessagesAsync(term, sessionCode, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
